SHOW databases;

    CREATE DATABASE PET_SHOP;
    
   USE PET_SHOP;
   
   CREATE	TABLE CATS (
    NAME VARCHAR (50) ,
    BREED VARCHAR (50) ,
    AGE INT ); 
    
    SHOW TABLES;

INSERT INTO CATS (
NAME, BREED, AGE)
VALUES (
"BLUE", "PERSIAN CAT", 7);

SELECT *
FROM CATS;

-- INSERT EXCERCISE
CREATE TABLE PEOPLE (
first_name VARCHAR(20),
last_name VARCHAR(20),
age INT);

INSERT INTO PEOPLE (
first_name, last_name, age)
VALUES (
"SRUSHTI", "PRAKASH" , 23),
("LAKSH", "KISHAN", 3),
("INDIRA", "MD", 60);

SELECT *
FROM PEOPLE;

CREATE TABLE CATS2 (
NAME VARCHAR(40) NOT NULL,
BREED VARCHAR(40) NOT NULL,
AGE INT NOT NULL);

desc CATS2;
USE PET_SHOP;

USE PET_SHOP;

CREATE TABLE Unique_cats(
cat_id INT PRIMARY KEY,
NAME VARCHAR(100) DEFAULT "UNNANMED",
AGE INT NOT NULL);

desc Unique_cats;

DROP table Unique_cats;

CREATE TABLE UNIQUE_CATS(
NAME VARCHAR(100) NOT NULL,
CAT_ID INT,
AGE INT NOT NULL,
PRIMARY KEY (CAT_ID)
);

INSERT INTO UNIQUE_CATS (
NAME,CAT_ID,AGE)
VALUES("LION",1,1);

DESC UNIQUE_CATS;

INSERT INTO UNIQUE_CATS (
NAME,AGE)
VALUES("MEOW",4);

INSERT INTO UNIQUE_CATS (
NAME,AGE)
VALUES("WAYOO",11);

DROP TABLE UNIQUE_CATS;

CREATE TABLE UNIQUE_CATS(
NAME VARCHAR(100) NOT NULL,
CAT_ID INT AUTO_INCREMENT,
AGE INT NOT NULL,
PRIMARY KEY (CAT_ID)
);

INSERT INTO UNIQUE_CATS (
NAME,AGE)
VALUES("MEOW",4);

DESC UNIQUE_CATS;

INSERT INTO UNIQUE_CATS (
CAT_ID,NAME,AGE)
VALUES (2, "WAYYOO" , 2);

SELECT *
FROM UNIQUE_CATS;

CREATE TABLE EMPLOYEE_TABLE(
EMPLOYEE_ID INT AUTO_INCREMENT PRIMARY KEY,
LAST_NAME VARCHAR(50) NOT NULL,
FIRST_NAME VARCHAR(50) NOT NULL,
MIDDLE_NAME VARCHAR(50),
AGE INT NOT NULL,
CURRENT_STATUS VARCHAR(50) NOT NULL DEFAULT "EMPLOYED");

DESC EMPLOYEE_TABLE;

SHOW TABLES;

DROP TABLE CATS;

CREATE TABLE CATS(
CAT_ID INT AUTO_INCREMENT,
NAME VARCHAR(50),
BREED VARCHAR(50),
AGE INT,
PRIMARY KEY (CAT_ID)
);

INSERT INTO cats(name, breed, age) 
VALUES ('Ringo', 'Tabby', 4),
       ('Cindy', 'Maine Coon', 10),
       ('Dumbledore', 'Maine Coon', 11),
       ('Egg', 'Persian', 4),
       ('Misty', 'Tabby', 13),
       ('George Michael', 'Ragdoll', 9),
       ('Jackson', 'Sphynx', 7);
       
SELECT *
FROM CATS;
       
SELECT NAME
FROM CATS;
       
SELECT NAME,
		AGE
FROM CATS;

SELECT *
FROM CATS
WHERE AGE=4;

SELECT *
FROM CATS
WHERE NAME='EGG';

SELECT CAT_ID,
		BREED
FROM CATS
WHERE AGE=4;

SELECT CAT_ID
FROM CATS;

SELECT NAME,
		BREED
FROM CATS;

SELECT NAME,
		AGE
FROM CATS
WHERE BREED='TABBY';

SELECT CAT_ID,
		AGE
FROM CATS
WHERE CAT_ID=AGE;

SELECT CAT_ID AS ID,
		NAME AS KITTYNAME
FROM CATS;

UPDATE CATS SET AGE=14
WHERE NAME= 'MISTY';

UPDATE CATS SET NAME='JACK'
WHERE NAME= 'JACKSON';

SELECT *
FROM CATS;

UPDATE CATS SET BREED= 'BRITISH SHORTHAIR'
WHERE NAME='RINGO';

SELECT *
FROM CATS;

UPDATE CATS SET AGE=12
WHERE BREED= 'MAINE COON';

USE PET_SHOP;

SHOW TABLES;

DELETE FROM CATS 
WHERE NAME='EGG';

SELECT *
FROM CATS;

DELETE FROM CATS
WHERE AGE=4;
SELECT *
FROM CATS;

DELETE FROM CATS
WHERE AGE=CAT_ID;
SELECT *
FROM CATS;

DELETE FROM CATS ;
SELECT *
FROM CATS;

CREATE TABLE SHIRTS(
SHIRT_ID INT PRIMARY KEY,
ARTICLE VARCHAR(20) NOT NULL,
COLOR VARCHAR(20) NOT NULL,
SHIRT_SIZE VARCHAR(6) NOT NULL,
LAST_WORN INT NOT NULL
);

CREATE DATABASE SHIRTS_DB;

USE SHIRTS_DB;

CREATE TABLE SHIRTSS(
SHIRT_ID INT PRIMARY KEY auto_increment,
ARTICLE VARCHAR(20) NOT NULL,
COLOR VARCHAR(20) NOT NULL,
SHIRT_SIZE VARCHAR(6) NOT NULL,
LAST_WORN INT NOT NULL
);

INSERT INTO SHIRTSS(
ARTICLE, COLOR, SHIRT_SIZE, LAST_WORN)
VALUES(('t-shirt', 'white', 'S', 10),
('t-shirt', 'green', 'S', 200),
('polo shirt', 'black', 'M', 10),
('tank top', 'blue', 'S', 50),
('t-shirt', 'pink', 'S', 0),
('polo shirt', 'red', 'M', 5),
('tank top', 'white', 'S', 200),
('tank top', 'blue', 'M', 15)
);

INSERT INTO SHIRTSS (
ARTICLE,COLOR,SHIRT_SIZE,LAST_WORN)
VALUES ('POLO SHIRT','PURPLE','M',50);

CREATE TABLE SHIRTSSS (
SHIRT_ID INT PRIMARY KEY auto_increment,
ARTICLE VARCHAR(20) NOT NULL,
COLOR VARCHAR(20) NOT NULL,
SHIRT_SIZE VARCHAR(6) NOT NULL,
LAST_WORN INT NOT NULL
);

INSERT INTO SHIRTSSS (
ARTICLE, COLOR, SHIRT_SIZE, LAST_WORN)
VALUES('t-shirt', 'white', 'S', 10),
('t-shirt', 'green', 'S', 200),
('polo shirt', 'black', 'M', 10),
('tank top', 'blue', 'S', 50),
('t-shirt', 'pink', 'S', 0),
('polo shirt', 'red', 'M', 5),
('tank top', 'white', 'S', 200),
('tank top', 'blue', 'M', 15)
;

INSERT INTO SHIRTSSS (
ARTICLE,COLOR,SHIRT_SIZE,LAST_WORN)
VALUES ('POLO SHIRT','PURPLE','M',50);

SELECT ARTICLE,
		COLOR
FROM SHIRTSSS;

DROP TABLE SHIRTSS;

SELECT *
FROM SHIRTSSS;

SELECT ARTICLE,
		COLOR,
        SHIRT_SIZE,
        LAST_WORN
FROM SHIRTSSS
WHERE SHIRT_SIZE='M';

UPDATE SHIRTSSS SET SHIRT_SIZE='L'
WHERE ARTICLE='POLO SHIRT';

SELECT*
FROM SHIRTSSS;

UPDATE SHIRTSSS SET LAST_WORN=0
WHERE LAST_WORN=15;
SELECT*
FROM SHIRTSSS;

UPDATE SHIRTSSS SET SHIRT_SIZE = 'XS',
					COLOR = 'OFF WHITE'
WHERE COLOR = 'WHITE';
SELECT*
FROM SHIRTSSS;

DELETE FROM SHIRTSSS
WHERE LAST_WORN = 200;
SELECT*
FROM SHIRTSSS;

DELETE FROM SHIRTSSS
WHERE ARTICLE='tank top';
SELECT *
FROM SHIRTSSS;

DELETE FROM SHIRTSSS;

SELECT *
FROM SHIRTSSS;


-- /STRING FUNCTIONS  USING BOOKS
CREATE DATABASE BOOK_SHOP;
USE BOOK_SHOP;

CREATE TABLE books 
	(
		book_id INT AUTO_INCREMENT,
		title VARCHAR(100),
		author_fname VARCHAR(100),
		author_lname VARCHAR(100),
		released_year INT,
		stock_quantity INT,
		pages INT,
		PRIMARY KEY(book_id)
	);
 
INSERT INTO books (title, author_fname, author_lname, released_year, stock_quantity, pages)
VALUES
('The Namesake', 'Jhumpa', 'Lahiri', 2003, 32, 291),
('Norse Mythology', 'Neil', 'Gaiman',2016, 43, 304),
('American Gods', 'Neil', 'Gaiman', 2001, 12, 465),
('Interpreter of Maladies', 'Jhumpa', 'Lahiri', 1996, 97, 198),
('A Hologram for the King: A Novel', 'Dave', 'Eggers', 2012, 154, 352),
('The Circle', 'Dave', 'Eggers', 2013, 26, 504),
('The Amazing Adventures of Kavalier & Clay', 'Michael', 'Chabon', 2000, 68, 634),
('Just Kids', 'Patti', 'Smith', 2010, 55, 304),
('A Heartbreaking Work of Staggering Genius', 'Dave', 'Eggers', 2001, 104, 437),
('Coraline', 'Neil', 'Gaiman', 2003, 100, 208),
('What We Talk About When We Talk About Love: Stories', 'Raymond', 'Carver', 1981, 23, 176),
("Where I'm Calling From: Selected Stories", 'Raymond', 'Carver', 1989, 12, 526),
('White Noise', 'Don', 'DeLillo', 1985, 49, 320),
('Cannery Row', 'John', 'Steinbeck', 1945, 95, 181),
('Oblivion: Stories', 'David', 'Foster Wallace', 2004, 172, 329),
('Consider the Lobster', 'David', 'Foster Wallace', 2005, 92, 343);

SELECT*
FROM BOOKS;

SELECT CONCAT(AUTHOR_FNAME,AUTHOR_LNAME)
FROM BOOKS;

SELECT CONCAT(AUTHOR_FNAME,' ',AUTHOR_LNAME)
FROM BOOKS;

SELECT CONCAT(AUTHOR_FNAME,' ',AUTHOR_LNAME)
AS AUTHOR_FULLNAME
FROM BOOKS;

SELECT *
FROM BOOKS;

SELECT CONCAT_WS('-',TITLE,AUTHOR_FNAME,AUTHOR_LNAME)
FROM BOOKS;

SELECT SUBSTRING(title,1,4);

USE shirts_db;

select substring('hello world',2,3) ;

select *
from books;

SELECT SUBSTRING(title,2,3)
FROM books;

SELECT CONCAT(SUBSTRING(TITLE,1,10),'...') AS 'SHORT TITLE'
FROM books;

SELECT 
    CONCAT(SUBSTRING(author_fname, 1, 1),
            '.',
            SUBSTRING(author_lname, 1, 1),
            '.') AS 'AUTHOR_INITIAL'
FROM
    books;
 
 SELECT 
    CONCAT_WS('.',
            SUBSTRING(AUTHOR_FNAME, 1, 1),
            SUBSTRING(AUTHOR_LNAME, 1, 1)) AS 'AUTHOR_INITIAL'
FROM
    books;
    
SELECT REPLACE (TITLE,' ', '-')
FROM books;

SELECT CONCAT(
			'I',' ','LOVE',' ',UPPER(TITLE),' ','!!!!'
            )
FROM
	books;
    
    
SELECT CONCAT_WS(
				' ','I','LOVE',UCASE(TITLE),'!!!!'
                )
	AS 'TITLE!'
FROM
	books;
    
SELECT reverse('HELLO');

SELECT REPLACE('HELLO WORLD','LL',00);

SELECT INSERT ('HELLO WORLD',6,0,' THERE ');

SELECT INSERT ('HELLO WORLD',6,4,'THERE');

SELECT INSERT ('HELLO WORLD',6,4,' THERE');

SELECT LEFT('FOGOGOGHOOO',3);

SELECT RIGHT('FOGOGOGHOOO',6);

SELECT REPLACE (TITLE,' ','')
FROM BOOKS;

SELECT REPEAT('HAHA',55);

SELECT TRIM(LEADING 'T' FROM TITLE)
FROM BOOKS;

SELECT TRIM(BOTH '.' FROM REPLACE('.,,,...SRUSHTI BEVERSI.....,,,',',','.'));

SELECT REVERSE (UPPER( 'Why does my cat look at me with such hatred'));

SELECT REPLACE (TITLE,' ','-->') AS 'TITLE'
FROM BOOKS;

SELECT AUTHOR_LNAME AS 'FORWARD',
		REVERSE(AUTHOR_LNAME) AS 'BACKWARD'
FROM
	BOOKS;
    
SELECT UPPER(CONCAT(
			AUTHOR_FNAME,
            ' ',
            AUTHOR_LNAME)) AS 'AUTHOR NAME IN CAPS'
FROM
	 BOOKS;
     
SELECT *
FROM BOOKS;

SELECT UPPER( CONCAT_WS (
			' ',
            TITLE,
            'WAS',
            'RELEASED',
            'IN',
            'THE',
            'YEAR',
            RELEASED_YEAR)) AS 'DESCRIPTIVE YEAR'
FROM
	BOOKS;
		
SELECT TITLE,
		CHAR_LENGTH (TITLE) AS 'CHARACTER COUNT'
FROM
	BOOKS;
    
SELECT CONCAT( SUBSTRING(TITLE,1,10), '...') AS 'SHORT TITLE',
		CONCAT(AUTHOR_LNAME,',',AUTHOR_FNAME) AS 'AUTHOR',
        CONCAT(STOCK_QUANTITY,' ','IN',' ','STOCK') AS 'QUANTITY'
FROM
	BOOKS;

        
        SELECT *
        FROM BOOKS;
USE BOOK_SHOP;

INSERT INTO books
    (title, author_fname, author_lname, released_year, stock_quantity, pages)
    VALUES ('10% Happier', 'Dan', 'Harris', 2014, 29, 256), 
           ('fake_book', 'Freida', 'Harris', 2001, 287, 428),
           ('Lincoln In The Bardo', 'George', 'Saunders', 2017, 1000, 367);
           
SELECT *
FROM BOOKS;
        
SELECT DISTINCT(CONCAT(
				AUTHOR_FNAME,
                ' ',
                AUTHOR_LNAME
                )) AS 'DISTINCT NAMES'
FROM
	BOOKS;
    
    
SELECT*
FROM BOOKS;

SELECT TITLE,
		AUTHOR_FNAME,
        PAGES,
        STOCK_QUANTITY
FROM BOOKS
ORDER BY TITLE DESC;

SELECT TITLE,
		AUTHOR_LNAME,
        PAGES,
        STOCK_QUANTITY
FROM BOOKS
ORDER BY PAGES ASC;

SELECT TITLE,
		BOOK_ID,
        AUTHOR_LNAME,
        RELEASED_YEAR
FROM
	BOOKS
ORDER BY AUTHOR_LNAME,
		RELEASED_YEAR;

SELECT CONCAT (
				AUTHOR_FNAME,
                ' ',
                AUTHOR_LNAME
                ) AS AUTHOR
FROM BOOKS
ORDER BY AUTHOR;

SELECT AUTHOR_FNAME,
		AUTHOR_LNAME,
        TITLE
FROM 
	BOOKS
ORDER BY 2 LIMIT 4,5;

SELECT *
FROM BOOKS 
WHERE TITLE LIKE '%:%';

SELECT TITLE,
		author_fname,
        author_lname,
        released_year
FROM BOOKS
WHERE AUTHOR_FNAME LIKE '%DA%';

SELECT *
FROM BOOKS
WHERE AUTHOR_FNAME LIKE '____';

SELECT *
FROM books
WHERE title LIKE '%\%%';

SELECT *
FROM BOOKS
WHERE TITLE LIKE '%\_%';

SELECT TITLE
FROM BOOKS
WHERE TITLE LIKE '%STORIES%';

SELECT *
FROM BOOKS;

SELECT TITLE,
		PAGES
FROM BOOKS
ORDER BY TITLE DESC LIMIT 5,1;

SELECT CONCAT
			(
			TITLE,
            '-',
            RELEASED_YEAR) AS 'SUMMARY'
FROM BOOKS
ORDER BY RELEASED_YEAR DESC LIMIT 0,3; 

SELECT TITLE,
		AUTHOR_LNAME
FROM BOOKS
WHERE AUTHOR_LNAME LIKE '% %';

SELECT TITLE,
		RELEASED_YEAR,
        STOCK_QUANTITY
FROM BOOKS 
ORDER BY STOCK_QUANTITY ASC LIMIT 0,3;

SELECT TITLE,
		AUTHOR_LNAME
FROM BOOKS
ORDER BY AUTHOR_LNAME,
		TITLE;
        
SELECT UPPER(CONCAT_WS(
				' ',
                'my',
                'fav',
                'author',
                'is',
                AUTHOR_FNAME,
                AUTHOR_LNAME,
                '!')) AS 'YELL'
FROM BOOKS
ORDER BY AUTHOR_LNAME;

use book_shop;

SELECT COUNT( * )
FROM BOOKS;

SELECT COUNT(AUTHOR_FNAME)
FROM BOOKS;

SELECT COUNT(DISTINCT AUTHOR_FNAME)
FROM BOOKS;

SELECT TITLE,
		AUTHOR_FNAME,
        AUTHOR_LNAME,
        COUNT(AUTHOR_FNAME) AS 'NUMBER OF AUTHORS'
FROM
	BOOKS;
    
SELECT COUNT(DISTINCT RELEASED_YEAR) AS 'DISTINCT YEARS'
FROM
	BOOKS;

SELECT *
FROM BOOKS;

SELECT COUNT( TITLE ) AS 'COUNT OF TITLES STARTING WITH \'THE\''
FROM BOOKS
WHERE TITLE LIKE 'THE%';
SELECT AUTHOR_FNAME,COUNT(*) AS BOOKS_WRITTEN FROM BOOKS
GROUP BY AUTHOR_FNAME
order by BOOKS_WRITTEN DESC LIMIT 0,5;

SELECT AUTHOR_LNAME, COUNT(*)
FROM BOOKS
GROUP BY AUTHOR_LNAME;

SELECT *
FROM BOOKS;

SELECT *,COUNT(*) AS 'BOOKS WRITTEN'
FROM BOOKS
GROUP BY AUTHOR_FNAME;

SELECT AUTHOR_FNAME,
		COUNT(AUTHOR_FNAME) AS BOOKS_WRITTEN
FROM BOOKS
GROUP BY AUTHOR_FNAME
ORDER BY  BOOKS_WRITTEN DESC LIMIT 0,5;

SELECT TITLE,
		MIN(RELEASED_YEAR) AS MIN_YEAR
FROM
	BOOKS;
    
SELECT TITLE,RELEASED_YEAR
FROM BOOKS
WHERE RELEASED_YEAR = (SELECT MIN(RELEASED_YEAR)FROM BOOKS);

SELECT TITLE, PAGES
FROM BOOKS
WHERE PAGES = (SELECT MAX(PAGES) FROM BOOKS);

SELECT AUTHOR_FNAME, AUTHOR_LNAME, COUNT(*)
FROM BOOKS
GROUP BY AUTHOR_LNAME, AUTHOR_FNAME;

SELECT CONCAT_WS(' ',AUTHOR_FNAME,AUTHOR_LNAME) AS AUTHOR,
COUNT(*) AS COUNT_OF_AUTHOR
FROM BOOKS
GROUP BY AUTHOR
ORDER BY COUNT_OF_AUTHOR DESC;

SELECT AUTHOR_FNAME,AUTHOR_LNAME,
		MIN(RELEASED_YEAR) AS MIN_YEAR
FROM BOOKS
GROUP BY AUTHOR_FNAME,
		AUTHOR_LNAME
ORDER BY MIN_YEAR ASC;

SELECT AUTHOR_FNAME,
		AUTHOR_LNAME,
        MAX(RELEASED_YEAR) AS MAX_YEAR
FROM BOOKS
GROUP BY AUTHOR_FNAME,
		AUTHOR_LNAME
ORDER BY MAX_YEAR DESC;

SELECT AUTHOR_FNAME,
		AUTHOR_LNAME,
        MAX(RELEASED_YEAR) AS MAX_YEAR,
        MIN(RELEASED_YEAR) AS MIN_YEAR,
        COUNT(*)
FROM BOOKS
GROUP BY AUTHOR_FNAME,
		AUTHOR_LNAME;

SELECT AUTHOR_FNAME,
		AUTHOR_LNAME,
        MAX(RELEASED_YEAR) AS MAX_YEAR,
        MIN(RELEASED_YEAR) AS MIN_YEAR,
        MAX(PAGES) AS MAX_PAGES,
        MIN(PAGES) AS MIN_PAGES,
        COUNT(*)
FROM BOOKS
GROUP BY AUTHOR_FNAME,
		AUTHOR_LNAME;
        
SELECT AUTHOR_LNAME,
		SUM(PAGES)
FROM BOOKS
GROUP BY AUTHOR_LNAME;
        
SELECT *
FROM BOOKS;

SELECT AVG(STOCK_QUANTITY) AS AVERAGE_STOCK_QUANTITY
FROM BOOKS
GROUP BY RELEASED_YEAR;

select count(*) as the_total_number_of_books
from books;

SELECT RELEASED_YEAR,
		COUNT(*) AS COUNT
FROM BOOKS
GROUP BY RELEASED_YEAR
ORDER BY COUNT;

SELECT SUM( STOCK_QUANTITY ) AS TOTAL_NUMBER_OF_BOOKS_IN_STOCK
FROM
	BOOKS;
    
SELECT AVG(RELEASED_YEAR),
			COUNT(*)
FROM BOOKS
GROUP BY AUTHOR_FNAME,
		AUTHOR_LNAME;

SELECT CONCAT_WS(' ',AUTHOR_FNAME,AUTHOR_LNAME) AS THE_WANTED_AUTHOR,
				PAGES
FROM
	BOOKS
WHERE PAGES = (SELECT MAX(PAGES) FROM BOOKS);


SELECT RELEASED_YEAR,
		COUNT(*) AS 'COUNT',
		AVG(PAGES) AS 'PAGES'
FROM books
GROUP BY RELEASED_YEAR
ORDER BY RELEASED_YEAR;


SHOW databases;

USE BOOK_SHOP;

CREATE TABLE NUMBERS ( NUM DECIMAL) ;

INSERT INTO NUMBERS (NUM) 
VALUES (448.33);

SHOW WARNINGS;

SELECT *
FROM NUMBERS;

CREATE TABLE NUMBERS1 ( 
NUM DECIMAL(7,2),
NUMBER_ID VARCHAR(2)
);
INSERT INTO NUMBERS1 (
NUM,NUMBER_ID) 
VALUES (52373.99, 'YA');

SELECT *
FROM NUMBERS1;

CREATE TABLE NUMBERS2 ( X FLOAT, Y DOUBLE , Z DECIMAL(50,6));

INSERT INTO NUMBERS2 (X,Y,Z) VALUES (6666587586889.54 ,6666587586889.54,6666587586889.54);

	DROP TABLE NUMBERS2;

SELECT *
FROM NUMBERS2;

INSERT INTO NUMBERS2 (X,Y,Z) VALUES (123456789123456789123.45 , 123456789123456789123.45, 123456789123456789123.45);

SELECT *
FROM NUMBERS2;

CREATE TABLE PEOPLE (
    NAME VARCHAR(20),
    BIRTHDAY DATE,
    BIRTHTIME TIMe,
    BIRTHDT DATETIME
);

CREATE TABLE CONTACTS (
			NAME VARCHAR(200) NOT NULL,
            PHONE_NUMBER VARCHAR(15) NOT NULL UNIQUE
);

DROP TABLE  CONTACTS ;

INSERT INTO CONTACTS (
			NAME,PHONE_NUMBER)
VALUES('BILLYBOB', 9606264838);


CREATE  TABLE BEGUR_DOGS (
			NAME VARCHAR(50) NOT NULL,
            AGE INT NOT NULL CHECK ( AGE > 10));
            
INSERT INTO BEGUR_DOGS (
			NAME,AGE)
VALUES('BUNTU', 11);

INSERT INTO BEGUR_DOGS (
			NAME,AGE)
VALUES ('MUTHU',24);

INSERT INTO BEGUR_DOGS(
			NAME,AGE)
VALUES('TUTTI', 23);

SELECT NAME AS 'NAMMA_MANEYA_NAYIGALU',
		AGE AS 'VAYASSU'
FROM BEGUR_DOGS;

DROP TABLE BEGUR_DOGS;

CREATE TABLE PALINDROMES (
		WORD VARCHAR(50) CHECK (REVERSE(WORD)=WORD));
        
INSERT INTO PALINDROMES (WORD)
VALUES ('MOM');
INSERT INTO PALINDROMES (WORD)
VALUES ('MALAYALAM');

CREATE TABLE COMPANIES(
		NAME VARCHAR(50) NOT NULL,
        ADDRESS VARCHAR(200) NOT NULL,
        CONSTRAINT NAME_ADDRESS UNIQUE ( NAME,ADDRESS)
        );
        
INSERT INTO COMPANIES (
		NAME,ADDRESS)
VALUES ('SINGINKATTE','LAKE NEAR NAM MANE'),
('KOODTHOTA','THOTA NEAR NAM MANE'),
('RAJAANA ANGADI','DABBA ANGDI NEAR NAM MANE'),
('SIKATE','LAKE');

ALTER TABLE COMPANIES
ADD COLUMN CITY VARCHAR(10);

SELECT *
FROM COMPANIES;
 
CREATE TABLE PALINDROMES2 (
WORD VARCHAR(50),
CONSTRAINT WORD_IS_NOT_PALINDROM CHECK (REVERSE(WORD)= WORD));

ALTER TABLE PALINDROMES2 
DROP CONSTRAINT WORD_IS_NOT_PALINDROM;

SELECT *
FROM PALINDROMES2;
ALTER TABLE PALINDROMES2
ADD CONSTRAINT WORD_IS_NOT_PALLINDROME CHECK (REVERSE(WORD)=WORD);
INSERT INTO PALINDROMES2 (WORD)
VALUES ('MOM');
INSERT INTO PALINDROMES2 (WORD)
VALUES ('MOMMY');

CREATE TABLE CUSTOMERS (
		ID INT PRIMARY KEY AUTO_INCREMENT,
        FIRST_NAME VARCHAR(50),
        LAST_NAME VARCHAR(50),
        EMAIL VARCHAR(50)
);

CREATE TABLE ORDERS (
		ID INT PRIMARY KEY AUTO_INCREMENT,
        ORDER_DATE DATE,
        AMOUNT DECIMAL (8,2),
        CUSTOMER_ID INT
        );
DROP TABLE ORDERS;

        

